=head1 Apache::Voodoo::Configuration

=head1 Configuring Voodoo's defaults

Run B<voodoo-control setconfig> to configure Voodoo's settings for your environment.
This only needs to be done once, unless you want to re-arrange things.

These will need to be set according to your environment.

=over

=item * Apache Prefix Path: Base directory for apache.  This should be set to Apache's ServerRoot.

=item * App Install Path: This is the location where you want to install your Voodoo based applications.  By default it's "sites" under the Apache Prefix.

=item * Session Path: The directory where you want session information to be housed for each application.

=item * Apache User: The user the Apache server runs as.

=item * Apache Group: The group the Apache server runs as.

=back

It is perfectly fine to take the default values for each of these.  The rest of the documentation is written as if
you're using the default values.

=over

=item * Config File Path: Where the config files for each application are to be kept.

=item * Config File Name: Path and name of the main config file for each application.

=item * Update File Path: Where update scripts are kept for each application.

=item * Template File Path: Where you want to keep the template files, images, javascript, etc for each application.

=item * Perl Module Path: Where you want to keep your perl mdules for each application.

=back

Configuration options related to the L<Native debugging backend|Apache::Voodoo::DebuggingTools>

=over

=item * Debug DB Connection

=item * Debug DB Username

=item * Debug DB Password

=item * Debug URL Path

=back

=head1 Loading Voodoo into Apache

Locate your C<modperl-startup.pl> for Apache and add the following:

	use lib("/data/apache/lib/perl");
	use Apache::Voodoo::Handler;
	$Apache::Voodoo::Handler = Apache::Voodoo::Handler->new();

If you want to use the L<Native Debugging Tools|Apache::Voodoo::DebuggingTools>, also add the following.

	use Apache::Voodoo::Debug::Handler;
	$Apache::Voodoo::Debug = Apache::Voodoo::Debug::Handler->new();

Apache 1 includes C<E<lt>ServerRootE<gt>/lib/perl> in the Perl include path by default.  Apache 2, however, 
does not.  Thus it is necessary for Apache 2 users to manually add this directory to the Perl include path.
There are a couple of ways to do this.  

Via the C<use lib> pragma in a startup file:

	use lib qw(/data/apache/lib/perl);

or via C<PerlSwitches> in the httpd.conf:

	PerlSwitches -I /data/apache/lib/perl

=head1 Configuring Apache to point to your application

Now we need to link a location in Apache to your application.  There are a couple of ways to do this depending
on the needs of your particular environment, all that is really required is that the configuration options are
either within a C<Directory> or C<Location> block.  You can configure your application to be attached to a virtual
host or some URL path under the main host or a virtual host.  You can also host multiple applications by setting up
multiple configuration blocks.

=head2 Example Virtual Host Configuration

	<VirtualHost *:80>
	    ServerName my.host.com
	    DocumentRoot /data/apache/sites/my_app/html
	
	    <Directory /data/apache/sites/my_app/html/>
	         SetHandler modperl
	
	         PerlResponseHandler $Apache::Voodoo::Handler->handler
	         PerlSetVar ID my_app
	    </Directory>
	</VirtualHost>

=head2 Example URL path Configuration

	<Location /some/path>
		SetHandler modperl
	
		PerlResponseHandler $Apache::Voodoo::Handler->handler
		PerlSetVar ID my_app
		PerlSetVar SiteRoot /some/path
	</Location>

=head3 SetHandler modperl

Tells Apache that a mod_perl is going to be used to handler requests for this directory

=head3 PerlResponseHandler $Apache::Voodoo::Handler->handler

Tells Apache what method to call to handle requests for this directory

=head3 PerlSetVar ID

This lets Voodoo know what application is attached to this directory.  An application's name must match the 
pattern C</[a-z][a-z0-9_-]*/i>.

=head3 PerlSetVar SiteRoot

The C<SiteRoot> parameter lets Voodoo know where your application is, URL wise, in relation to C</>.  
It is necessary to set this if your application is located in a sub directory or aliased location on the host.
This is necessary to deal with the fact that there isn't a good way from inside mod_perl to know if the URL that's
being requested is part of a C<Location> or C<Alias> directive.

  If you have this                     | SiteRoot should be
  =========================================================
  <Location /foo/bar>                  | /foo/bar
                                       |
  Alias /bar/baz/qux /some/path/here   |
  <Directory /some/path/here>          | /bar/baz/qux
                                       |
  DocumentRoot /some/path              |
  <Directory /some/path/subdirectory>  | /subdirectory


=head1 Voodoo Configuration File

Each Voodoo application has it's own configuration file that is kept in C<E<lt>ServerRootE<gt>/sites/(name_of_application)/etc/voodoo.conf>

The "name_of_application" directory must match the value of the ID parameter in the L<Apache::Voodoo::ApacheConfiguration>
file. In the case of the example given there, it would be "my_app".

This is also used as the top level package name that Voodoo will use in loading all other modules. This can be overridden
with the optional L<base_package|/base_package> directive.

Voodoo uses L<Config::General> for its configuration files.  See its documentation for more information on its syntax rules.

=head2 Example Configuration


	devel_mode = 1
	
	cookie_name  = my_app_SID
	session_dir  = /usr/local/apache/sessions/my_app
	
	<debug>
	    <Native>
	       all = 1
	    </Native>
	    <FirePHP>
	       all = 1
	    </FirePHP>
	</debug>
	
	<database>
	    connect  = "dbi:mysql:database=my_app;host=127.0.0.1;mysql_connect_timeout=2"
	    username = "test_user"
	    password = "test_password"
	</database>
	
	<controllers>
	    index
	</controllers>
	
	<includes>
	    date
	    main_menu
	</includes>
	
	<models>
	    user
	</models>
	
	<template_conf>
	    <default>
	              skeleton = skeleton.tmpl
	              pre_include = date
	              post_include = main_menu
	    </default>
	</template_conf>


=head2 Basic Options


=head3 devel_mode

Enables or disables the display of verbose (developer) or terse (end user) error messages.

=head3 dynamic_loading

Enables or disable dynamic module reloading.

=head3 halt_on_errors

If set to 1, this causes the server to return a C<503 (server temporary unavailable)> message for the host if any modules
fail to load.  Defaults to 0

=head3 base_package

Allows you to override the default behaviour of the application name being equal to the top level package name.  This is
useful in scenarios where you want to run multiple instances of the same application in the same instance of Apache.

=head3 upload_size_max

Maximum size in bytes of any uploaded files.  Defaults to 5 MB.

=head3 debug

Configures the various debugging back ends.  See L<Apache::Voodoo::DebuggingTools> for more details.

=head2 Database Options


=head3 database

This is a list of database connection info.  Databases are connected to in the order listed. If the first connection fails
the next in the list is used.  An error message is generated in the Apache error log file on a failed connection, but no other
action is taken. There are good database monitoring packages out there :) .  The contents of each array element is passed
directly to C<DBI-E<gt>connect_cached>.

=head3 Session Options


=head3 cookie_name

This is a optional parameter that sets the name of the cookie used by Voodoo for session identification.  If it is not supplied
the cookie name will application name with "_SID" appended.

=head3 https_cookies

Controls whether or not the session cookie will be sent only over HTTPS connections.  Defaults to 0.

=head3 session_timeout

Number of minutes before a cookie expires.  Set to 0 for no expiration, defaults to 15 minutes.

=head3 session_dir

This is the directory that L<Apache::Session> will use to store session information.  This directory must be present and
writeable by whatever user Apache runs as.

=head3 session_table

Optionally, you can store session data inside the database instead of a directory by setting this option to the name of the
table.  Either this option of C<session_dir> must be present.  See L<Apache::Session> for details.


=head2 Perl Modules

=head3 controllers

This contains the list of controllers that will be loaded by Voodoo. See L<Apache::Voodoo::ControllerAPI> for more details.

=head3 includes

This contains the list of modules to be loaded that behave like controllers that can be called either before or after the
controller for a given URL.

For example, if your application has a dynamic menu that appears on every page, you can create a include that handles that
instead of having to remember to handle it in each controller.

See L<Apache::Voodoo::ControllerAPI> for more details.

=head3 models

This contains the list of models that will be loaded by Voodoo. See L<Apache::Voodoo::ModelAPI> for more details.

=head3 views

This contains the list of views that will be loaded by Voodoo. See L<Apache::Voodoo::ViewAPI> for more details.

=head2 Apache::Voodoo::View::HTML Options

=head3 template_opts

Key value pairs passed to the new of L<HTML::Template>.  See L<Apache::Voodoo::View::HTML> for more details.

=head3 themes


=head2 Per URL Configuration


=head3 template_conf

The entries here are regular expression entries that match one or more page with the application. Each section may be used to
control certain aspects of how Voodoo presents the page. The magic entry E<lt>_default_E<gt> matches any page that doesn't have
another matching entry.  Standard items are:

=head3 pre_include

A list of include controllers to call on this page, *BEFORE* the main page controller. These will be called in the order given
in the list.

=head3 post_include

A list of include controllers to call on this page, *AFTER* the main page controller. These will be called in the order given
in the list.

=head3 default_view

Which view to use by default.  Defaults to L<HTML|Apache::Voodoo::View::HTML>.

=head3 skeleton

Which skeleton template to use. See L<Apache::Voodoo::View::HTML>

=head3 content-type

Content type for the output.  Defaults to text/html

Any other parameters are accessible to the controllers via L<$p|Apache::Voodoo::ControllerAPI>->{'template_conf'}.
The L<HTML view|Apache::Voodoo::View::HTML> also passes these to the underlying template.

