=head1 Voodoo Configuration File


=head1 Overview

Each Voodoo application has it's own configuration file that is kept in C<E<lt>L<Apache::Voodoo::ServerRootE><gt>/sites/E<lt>name_of_applicationE<gt>/etc/voodoo.conf>

The "name_of_application" directory must match the value of the ID parameter in the L<Apache::Voodoo::ApacheConfiguration> file. In the case of the example given there, it
would be "my_app".

This is also used as the top level package name that Voodoo will use in loading all other modules. This can be overridden with the optional L<base_package|/base_package> directive.

Voodoo uses the L<Config::General> module for its configuration files.  See its documentation for more information on its syntax rules.

=head1 Example Configuration


	devel_mode = 1
	
	cookie_name  = my_app_SID
	session_dir  = /usr/local/apache/sessions/my_app
	
	<debug>
	    <Native>
	       all = 1
	    </Native>
	    <FirePHP>
	       all = 1
	    </FirePHP>
	</debug>
	
	<database>
	    connect  = "dbi:mysql:database=my_app;host=127.0.0.1;mysql_connect_timeout=2"
	    username = "test_user"
	    password = "test_password"
	</database>
	
	<controllers>
	    index
	</controllers>
	
	<includes>
	    date
	    main_menu
	</includes>
	
	<models>
	    user
	</models>
	
	<template_conf>
	    <default>
	              skeleton = skeleton.tmpl
	              pre_include = date
	              post_include = main_menu
	    </default>
	</template_conf>


=head1 Basic Options


=head2 devel_mode

Enables or disables the display of verbose (developer) or terse (end user) error messages.

=head2 dynamic_loading

Enables or disable dynamic module reloading.

=head2 halt_on_errors

If set to 1, this causes the server to return a C<503 (server temporary unavailable)> message for the host if any modules fail to load.  Defaults to 0

=head2 base_package

Allows you to override the default behaviour of the application name being equal to the top level package name.  This is useful in scenarios where you want to run multiple instances of the same application in the same instance of Apache.

=head2 upload_size_max

Maximum size in bytes of any uploaded files.  Defaults to 5 MB.

=head2 debug

Configures the various debugging back ends.  See L<Apache::Voodoo::DebuggingTools> for more details.

=head1 Database Options


=head2 database

This is a list of database connection info.  Databases are connected to in the order listed. If the first connection fails the next in the list is used.  An error message is generated in the Apache error log file on a failed connection, but no other action is taken. There are good database monitoring packages out there :) .  The contents of each array element is passed directly to DBI->connect_cached.

=head1 Session Options


=head2 cookie_name

This is a optional parameter that sets the name of the cookie used by Voodoo for session identification.  If it is not supplied the cookie name will application name with "_SID" appended.

=head2 https_cookies

Controls whether or not the session cookie will be sent only over HTTPS connections.  Defaults to 0.

=head2 session_timeout

Number of minutes before a cookie expires.  Set to 0 for no expiration, defaults to 15 minutes.

=head2 session_dir

This is the directory that L<Apache::Session> will use to store session information.  This directory must be present and writeable by whatever user Apache runs as.

=head2 session_table

Optionally, you can store session data inside the database instead of a directory by setting this option to the name of the table.
Either this option of C<session_dir> must be present.
See L<Apache::Session> for details.


=head1 Perl Modules

=head2 controllers

This contains the list of controllers that will be loaded by Voodoo. See L<Apache::Voodoo::ControllerAPI> for more details.

=head2 includes

This contains the list of modules to be loaded that behave like controllers that can be called either before or after the controller for a given URL. See L<Apache::Voodoo::ControllerAPI> for more details.

For example, if your application has a dynamic menu that appears on every page, you can create a include that handles that instead of having to remember to handle it in each controller.

See L<Apache::Voodoo::ControllerAPI> for more details.

=head2 models

This contains the list of models that will be loaded by Voodoo. See L<Apache::Voodoo::ModelAPI> for more details.

=head2 views

This contains the list of views that will be loaded by Voodoo. See L<Apache::Voodoo::ViewAPI> for more details.

=head1 L<Apache::Voodoo::ViewHTML> Options

=head2 template_opts

Key value pairs passed to the new of L<HTML::Template|L<HTML::Template>.>  See L<Apache::Voodoo::ViewHTML> for more details.

=head2 themes


=head1 Per URL Configuration


=head2 template_conf

The entries here are regular expression entries that match one or more page with the application. Each section may be used to control certain aspects of how Voodoo presents the page. The magic entry _E<lt>defaultE<gt>_ matches any page that doesn't have another matching entry.  Standard items are:

=head3 pre_include

A list of include controllers to call on this page, *BEFORE* the main page controller. These will be called in the order given in the list.

=head3 post_include

A list of include controllers to call on this page, *AFTER* the main page controller. These will be called in the order given in the list.

=head3 default_view

Which view to use by default.  Defaults to L<HTML|L<Apache::Voodoo::ViewHTML>>.

=head3 skeleton

Which skeleton template to use. See L<Apache::Voodoo::ViewHTML>

=head3 content-type

Content type for the output.  Defaults to text/html

Any other parameters are accessible to the controllers via L<$p|L<Apache::Voodoo::ControllerAPI>>->{'template_conf'}.  The L<HTML view|L<Apache::Voodoo::ViewHTML>> also passes these to the underlying template.

