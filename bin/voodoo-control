#!/usr/bin/perl -I /data/apache/lib/perl

=pod ####################################################################################

=head1 NAME

voodoo-control - install / upgrade 

=head1 VERSION

$Id: Handler.pm 2597 2005-09-15 16:33:41Z medwards $

=head1 SYNOPSIS

FIXME: Add documentation

=cut ####################################################################################

use Apache::Voodoo::Installer;

use DBI;
use Getopt::Long;

use Data::Dumper;

use strict;
use warnings;

# turn off buffered output
$| = 1;

my $pretend = 0;
my ($distribution,$dbhost,$dbname,$dbuser,$dbpass,$dbroot);

GetOptions(
	'pretend'     => \$pretend,
	'dbhost|h:s'  => \$dbhost,
	'dbname|n:s'  => \$dbname,
	'dbuser|u:s'  => \$dbuser,
	'dbpass|p:s'  => \$dbpass,
	'dbroot|r:s'  => \$dbroot,
	'install|f=s' => \$distribution,
);

################################################################################
# make sure this file exists and that the name follows the correct format
################################################################################
unless (defined($distribution)) {
	print "\nAutomated install / upgrade for Apache::Voodoo based applications.\n\n";
	print "Usage: voodoo-control [options] --install installfile\n";
	print "    --pretend    Step through operations.  Don't actually do anything\n";
	print "    -h --dbhost  Override database host name in config files\n";
	print "    -n --dbname  Override database name in conf files\n";
	print "    -u --dbuser  Override database username in conf files\n";
	print "    -p --dbpass  Override database password in conf files\n";
	print "    -r --dbroot  Database root password\n";
	print "\n";
	exit;
}

my $installer = Apache::Voodoo::Installer->new(
	'verbose' => 4,
	'pretend' => $pretend,
	'dbhost'  => $dbhost,
	'dbname'  => $dbname,
	'dbpass'  => $dbpass,
	'dbroot'  => $dbroot
);

print Dumper $installer;

=pod

################################################################################
# unpack and verify the distribution
################################################################################
my ($unpack_dir,$app_name) = $installer->unpack_distribution($distribution);

$installer->check_distribution($unpack_dir,$app_name);

################################################################################
# Let's see if we're upgrading an existing app.
################################################################################
my $old_version = $installer->check_existing();

$pretend || $new_config->save_file($unpack_dir."/etc/$app_name.conf");

################################################################################
# Make sure the supplied database info works.
################################################################################

# pull these (back?) out to use below
$dbhost = $new_cdata{'database'}->{'connect'};
$dbname = $new_cdata{'database'}->{'connect'};
$dbuser = $new_cdata{'database'}->{'username'};
$dbpass = $new_cdata{'database'}->{'password'};

$dbhost =~ s/.*\bhost=//;
$dbhost =~ s/[^\w\.-]+.*$//;

$dbname =~ s/.*\bdatabase=//;
$dbname =~ s/[^\w\.-]+.*$//;

my $dbh;
if ($old_version) {
	# If there is an old version (meaning we're doing an upgrade)
	# we would expect to be able to connect to that database.
	# Not so for a new installation...we expect that the setup.xml creates it
	# and the user account as necessary.
	print "- Attempting connection to database: ";
	$dbh = DBI->connect(
		$new_cdata{'database'}->{'connect'},
		$new_cdata{'database'}->{'username'},
		$new_cdata{'database'}->{'password'}) || die DBI->errstr;
	$dbh->disconnect;
	print "ok\n";
}

print "- Attempting connection to database as root: ";
my $testdb = $new_cdata{'database'}->{'connect'};
$testdb =~ s/database=[\w\.-]+/database=test/;

$dbh = DBI->connect(
	$testdb,
	'root',
	$dbroot) || die DBI->errstr;
print "ok\n";

print "- Checking for existance of the $dbname database: ";
my $res = $dbh->selectall_arrayref("SHOW DATABASES LIKE '$dbname'");
unless ($res->[0]->[0] eq $dbname) {
	$dbh->do("CREATE DATABASE $dbname") || die "Can't create database $dbname: ".DBI->errstr;
	$dbh = DBI->connect(
		$new_cdata{'database'}->{'connect'},
		'root',
		$dbroot) || die DBI->errstr;

	print "created\n";
}

$installer->prepare_setup_commands();
$installer->install_files();
$installer->post_setup_checks();
$installer->execute_setup_commands();

$installer->cleanup();

=pod ################################################################################

=head1 AUTHOR

Maverick, /\/\averick@smurfbaneDOTorg

=head1 COPYRIGHT

Copyright (c) 2005 Steven Edwards.  All rights reserved.

You may use and distribute Voodoo under the terms described in the LICENSE file include
in this package or L<Apache::Voodoo::license>.  The summary is it's a legalese version
of the Artistic License :)

=cut ################################################################################
