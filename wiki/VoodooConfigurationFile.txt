%META:TOPICINFO{author="MaverickEdwards" date="1244666281" format="1.1" reprev="1.5" version="1.5"}%
---+ Voodoo Configuration File
%TOC%

---++ Overview
Each Voodoo application has it's own configuration file that is kept in =&lt;ServerRoot&gt;/sites/&lt;name_of_application&gt;/etc/voodoo.conf=

The "name_of_application" directory must match the value of the ID parameter in the ApacheConfiguration file. In the case of the example given there, it
would be "my_app".

This is also used as the top level package name that Voodoo will use in loading all other modules. This can be overridden with the optional [[#base_package][base_package]] directive.

Voodoo uses the CPAN:Config::General module for its configuration files.  See its documentation for more information on its syntax rules.

---++ Example Configuration
<verbatim>
devel_mode = 1

cookie_name  = my_app_SID
session_dir  = /usr/local/apache/sessions/my_app

<debug>
    <Native>
       all = 1
    </Native>
    <FirePHP>
       all = 1
    </FirePHP>
</debug>

<database>
    connect  = "dbi:mysql:database=my_app;host=127.0.0.1;mysql_connect_timeout=2"
    username = "test_user"
    password = "test_password"
</database>

<controllers>
    index
</controllers>

<includes>
    date
    main_menu
</includes>

<models>
    user
</models>

<template_conf>
    <default>
              skeleton = skeleton.tmpl
              pre_include = date
              post_include = main_menu
    </default>
</template_conf>
</verbatim>

---++ Basic Options

---+++ devel_mode
Enables or disables the display of verbose (developer) or terse (end user) error messages.

---+++ dynamic_loading
Enables or disable dynamic module reloading.

---+++ halt_on_errors
If set to 1, this causes the server to return a =503 (server temporary unavailable)= message for the host if any modules fail to load.  Defaults to 0

---+++ base_package
Allows you to override the default behaviour of the application name being equal to the top level package name.  This is useful in scenarios where you want to run multiple instances of the same application in the same instance of Apache.

---+++ upload_size_max
Maximum size in bytes of any uploaded files.  Defaults to 5 MB.

---+++ debug
Configures the various debugging back ends.  See DebuggingTools for more details.

---++ Database Options

---+++ database
This is a list of database connection info.  Databases are connected to in the order listed. If the first connection fails the next in the list is used.  An error message is generated in the Apache error log file on a failed connection, but no other action is taken. There are good database monitoring packages out there :) .  The contents of each array element is passed directly to DBI->connect_cached.

---++ Session Options

---+++ cookie_name
This is a optional parameter that sets the name of the cookie used by Voodoo for session identification.  If it is not supplied the cookie name will application name with "_SID" appended.

---+++ https_cookies
Controls whether or not the session cookie will be sent only over HTTPS connections.  Defaults to 0.

---+++ session_timeout
Number of minutes before a cookie expires.  Set to 0 for no expiration, defaults to 15 minutes.

---+++ session_dir
This is the directory that CPAN:Apache::Session will use to store session information.  This directory must be present and writeable by whatever user Apache runs as.

---+++ session_table
Optionally, you can store session data inside the database instead of a directory by setting this option to the name of the table.
Either this option of =session_dir= must be present.
See CPAN:Apache::Session for details.


---++ Perl Modules
---+++ controllers
This contains the list of controllers that will be loaded by Voodoo. See ControllerAPI for more details.

---+++ includes
This contains the list of modules to be loaded that behave like controllers that can be called either before or after the controller for a given URL. See ControllerAPI for more details.

For example, if your application has a dynamic menu that appears on every page, you can create a include that handles that instead of having to remember to handle it in each controller.

See ControllerAPI for more details.

---+++ models
This contains the list of models that will be loaded by Voodoo. See ModelAPI for more details.

---+++ views
This contains the list of views that will be loaded by Voodoo. See ViewAPI for more details.

---++ ViewHTML Options
---+++ template_opts
Key value pairs passed to the new of [[CPAN:HTML::Template][HTML::Template]].  See ViewHTML for more details.

---+++ themes

---++ Per URL Configuration

---+++ template_conf
The entries here are regular expression entries that match one or more page with the application. Each section may be used to control certain aspects of how Voodoo presents the page. The magic entry _&lt;default&gt;_ matches any page that doesn't have another matching entry.  Standard items are:

---++++ pre_include
A list of include controllers to call on this page, *BEFORE* the main page controller. These will be called in the order given in the list.

---++++ post_include
A list of include controllers to call on this page, *AFTER* the main page controller. These will be called in the order given in the list.

---++++ default_view
Which view to use by default.  Defaults to [[ViewHTML][HTML]].

---++++ skeleton
Which skeleton template to use. See ViewHTML

---++++ content-type
Content type for the output.  Defaults to text/html

Any other parameters are accessible to the controllers via [[ControllerAPI][$p]]->{'template_conf'}.  The [[ViewHTML][HTML view]] also passes these to the underlying template.

%META:TOPICMOVED{by="MaverickEdwards" date="1244574635" from="Voodoo.VoodooConfiguration" to="Voodoo.VoodooConfigurationFile"}%
%META:REVCOMMENT{comment_1=" " minor_1="1" ncomments="1" rev_1="5" t_1="1244663260"}%
